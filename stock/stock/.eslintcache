[{"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\index.js":"1","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\App.js":"2","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\reportWebVitals.js":"3","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\stock_page.js":"4","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Register.js":"5","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\data\\saying.js":"6","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Service.js":"7","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Interest.js":"8","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart.js":"9","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Login.js":"10","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Portfolio.js":"11"},{"size":619,"mtime":1614317447445,"results":"12","hashOfConfig":"13"},{"size":9602,"mtime":1615086148641,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1614317447445,"results":"15","hashOfConfig":"13"},{"size":2084,"mtime":1615082540579,"results":"16","hashOfConfig":"13"},{"size":3748,"mtime":1614759154690,"results":"17","hashOfConfig":"13"},{"size":4513,"mtime":1614317447440,"results":"18","hashOfConfig":"13"},{"size":193,"mtime":1614317447439,"results":"19","hashOfConfig":"13"},{"size":4305,"mtime":1615083955081,"results":"20","hashOfConfig":"13"},{"size":1199,"mtime":1614691088967,"results":"21","hashOfConfig":"13"},{"size":2543,"mtime":1615086666090,"results":"22","hashOfConfig":"13"},{"size":7663,"mtime":1615094053900,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"kujy6y",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\index.js",["52"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter,HashRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n     <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["53","54"],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\App.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\reportWebVitals.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\stock_page.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Register.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\data\\saying.js",["55"],"export default \r\n[\r\n    {\r\n        id : 0,\r\n        name : \"워렌버핏\",\r\n        saying : \"주식시장은 '적극적인 자에게서 참을성이 많은 자에게로' 돈이 넘어가도록 설계되어 있다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 1,\r\n        name : \"하워드막스\",\r\n        saying : \"가치에 대한 확고한 신념이 있어야만 수익이 발생하지 않는 기간을 버텨낼 수 있다.\"\r\n        ,image : \"./하워드막스.png\"\r\n    },\r\n    {\r\n        id : 2,\r\n        name : \"그레이엄\",\r\n        saying : \"투자란 철저한 분석을 통해 원금을 안전하게 지키면서도 만족스러운 수익을 확보하는 것이다. 그렇지 않으면 투기다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    },\r\n    {\r\n        id : 3,\r\n        name : \"워렌버핏\",\r\n        saying : \"평범한 지능을 갖추고 있다면 조바심을 절제할 수 있어야 한다. 조바심 때문에 많은 투자자들이 문제에 부딪힌다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 4,\r\n        name : \"세스클라만\",\r\n        saying : \" 투자자들은 가격이 하락할 때 공포를 이기는 법을 배워야 하며, 가격이 상승할 때 너무 열광하거나 욕심부리지 않는 법을 깨달아야 한다.\"\r\n        ,image : \"./세스클라만.png\"\r\n    },\r\n    {\r\n        id : 5,\r\n        name : \"찰리멍거\",\r\n        saying : \"이익이 확실할 때만 움직이십시오. 이건 가장 기본적인 것입니다. 승산을 이해해야 하고, 유리할 때만 베팅하는 훈련을 해야 합니다.\"\r\n        ,image : \"./찰리멍거.png\"\r\n    },\r\n    {\r\n        id : 6,\r\n        name : \"하워드막스\",\r\n        saying : \"성공은 그 자체로 실패의 씨앗을 품고 있으며, 실패는 그 자체로 성공의 씨앗을 품고 있다.\"\r\n        ,image : \"./하워드막스.png\"\r\n    },\r\n    {\r\n        id : 7,\r\n        name : \"워렌버핏\",\r\n        saying : \"우리는 비관론이 있을 때 투자하고자 한다. 우리가 비관론을 좋아해서가 아니라, 비관론 덕분에 주가가 싸지기 때문이다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 8,\r\n        name : \"세스클라만\",\r\n        saying : \"돈을 빨리 벌고자 하는 유혹이 너무 커서 많은 투자자들이 대중에 역하는 것을 어려워한다.\"\r\n        ,image : \"./세스클라만.png\"\r\n    },\r\n    {\r\n        id : 9,\r\n        name : \"피터린치\",\r\n        saying : \"인기 업종의 인기 주식에 투자해서 얻는 수익으로 살아가려한다면, 생활보조금을 받으며 살아가는 신세가 되는 것은 시간 문제다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 10,\r\n        name : \"코스톨라니\",\r\n        saying : \"투자자는 무엇이 옳고 그른지에 대해 자신만의 생각과 아이디어, 방향을 가지고 있어야 하며, 대중에 휩쓸려 감정적으로 행동하지 않아야 한다.\"\r\n        ,image : \"./코스톨라니.png\"\r\n    },\r\n    {\r\n        id : 11,\r\n        name : \"피터린치\",\r\n        saying : \"추가 하락이 두려워 좋은 가격의 기업을 포기한다면 장기적으로 아주 큰 댓가를 치를 것이다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 12,\r\n        name : \"그레이엄\",\r\n        saying : \"현명한 투자자는 비관주의자에게서 주식을 사서 낙관주의자에게 판다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    },\r\n    {\r\n        id : 13,\r\n        name : \"찰리멍거\",\r\n        saying : \"질투는 미친 짓입니다. 100% 파멸을 부릅니다. 일치감치 질투에서 벗어나면 인생이 훨씬 나아집니다.\"\r\n        ,image : \"./찰리멍거.png\"\r\n    },\r\n    {\r\n        id : 14,\r\n        name : \"템플턴\",\r\n        saying : \"최적의 매수 타이밍은 시장에 피가 낭자할 때다. 설령 그것이 당신의 피일지라도 말이다.\"\r\n        ,image : \"./템플턴.png\"\r\n    },\r\n    {\r\n        id : 15,\r\n        name : \"피터린치\",\r\n        saying : \"투자의 성공 여부는 얼마나 오랫동안 세상의 비관론을 무시할 수 있는지에 달려있다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 16,\r\n        name : \"그레이엄\",\r\n        saying : \"현명한 투자자일지라도 대중을 따라가지 않으려면 대단한 의지력이 필요하다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    }\r\n    \r\n]","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Service.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Interest.js",["56","57","58","59","60","61","62"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { RESERVED_EVENTS } from 'socket.io/dist/socket';\r\nimport {Modal, Button,Table,Form,FormControl,Card,Accordion} from 'react-bootstrap';\r\n\r\nfunction Interest(props){\r\n   let [URL,URLset] = useState(\"https://public.tableau.com/views/juice_16149437075470/interest?:language=en&:display_count=y&:origin=viz_share_link:showVizHome=no&:embed=true&Stock=\");\r\n   let [cart,cartset] =useState([]);\r\n   let [add,addset] = useState(\"\");\r\n   useEffect(()=>{\r\n        axios.post('/interest', encodeURIComponent(props.id))\r\n        .then((res)=>{\r\n          console.log(\"좋아 관심종목 데이터 받았어\");\r\n            res.data.map(function(a,i){\r\n                URLset(URL=>URL+res.data[i].stock+\",\");\r\n                cartset([...cart,...res.data]);\r\n              })\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"다시 체크해주세요!\");\r\n        })\r\n    },[],[add]);\r\n\r\n    return (\r\n        <div>\r\n          {URL}\r\n            <iframe src={URL} width=\"1500px\" height=\"950px\"></iframe>\r\n            <br/>\r\n            <Add_Button id = {props.id} cart = {cart} add={add} addset={addset}></Add_Button>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Add_Button(props) {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n            관심종목 관리\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose} size = \"xl\" animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.id} 님의 종목 관리</Modal.Title>\r\n          </Modal.Header>\r\n  \r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\" style={{width : \"300px\", align : \"center\"}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"500px\", textAlign : \"center\"}}>관심종목</th>\r\n                  </tr>\r\n                </thead>  \r\n                <tbody>\r\n                    {\r\n                      props.cart.map(function(a,i){\r\n                        return (\r\n                          <div>\r\n                            <tr>\r\n                              <td style = {{width : \"300px\", textAlign : \"center\"}}>{props.cart[i]?.stock}</td>\r\n                              <td style = {{width : \"100px\", textAlign : \"center\"}}> <Button variant=\"secondary\" onClick={()=>{\r\n                                axios.post('/interest_delete',props.cart[i]?.stock)\r\n                                .then((res)=>{\r\n                                  console.log(\"삭제성공\")\r\n                                })\r\n                                .catch(()=>{\r\n                                  console.log(\"삭제실패\")\r\n                                })\r\n                              }}> 삭제 </Button></td>\r\n                            </tr> \r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                </tbody>\r\n\r\n              </Table>\r\n                <Form inline>\r\n                  <FormControl type=\"text\" placeholder=\"예) 삼성전자\" className=\"mr-sm-2\"onChange={(e)=>{props.addset(e.target.value)}}/>\r\n                  <Button variant=\"outline-success\" onClick = {()=>{\r\n                    axios.post('/interest_add',{email : props.id, stock : encodeURIComponent(props.add)})\r\n                    .then((res)=>{\r\n                      console.log(\"관심종목 추가 성공\")\r\n                    })\r\n                    .catch((err)=>{\r\n                      console.log(\"관심종목 추가 실패\")\r\n                    })\r\n                  }}>관심종목 추가</Button>\r\n                </Form>\r\n\r\n              \r\n            </Modal.Body>\r\n                    \r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport default Interest;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart.js",["63","64","65","66","67"],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Login.js",["68"],"import React, { useEffect, useState } from \"react\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import \"./Login.css\";\r\nimport axios from 'axios';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [alert,alertset] = useState(true);\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n  useEffect(()=>{\r\n    let temp = localStorage.getItem('email');\r\n    console.log(temp)\r\n    if(temp!==null){\r\n      props.idset(temp);\r\n    }\r\n  },[])\r\n  return (\r\n        <div className=\"Login\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>이메일</Form.Label>\r\n            <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>비밀번호</Form.Label>\r\n            <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={()=>{\r\n              axios.post('./login',{email:{email},password:{password}})\r\n              .then((res)=>{\r\n                if(res.data === false){\r\n                  alertset(false);\r\n                }\r\n                else{\r\n                  alertset(true);\r\n                  props.idset(email);\r\n                  localStorage.setItem('email',props.id)\r\n                } \r\n              })\r\n              .catch((err)=>{\r\n                alertset(false);\r\n              })\r\n            }}>\r\n            로그인\r\n            </Button>\r\n        </Form>\r\n          {\r\n            alert ===false\r\n            ? \r\n            <Alert variant=\"danger\">\r\n            <Alert.Heading>로그인 에러</Alert.Heading>\r\n            <p>\r\n              이메일 혹은 비밀번호가 틀렸습니다. 다시 확인해주세요.\r\n            </p>\r\n          </Alert>\r\n          :\r\n          null\r\n          }\r\n        </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Portfolio.js",["69","70","71","72"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Form,FormControl,Button,Modal,Table,Card,Accordion} from 'react-bootstrap';\r\n\r\nfunction Portfolio(props){\r\n        let URL = \"https://public.tableau.com/views/juice_16149437075470/portfolio?:language=en&:display_count=y&:origin=viz_share_link:showVizHome=no&:embed=true&email=\"+props.id;    \r\n        let [cart, cartset] = useState([]);\r\n        let [modify, modify_set] =useState(false);\r\n        useEffect(()=>{\r\n          axios.post('/portfolio', encodeURIComponent(props.id))\r\n          .then((res)=>{\r\n                console.log(\"좋아 포트폴리오 데이터 받았어\");\r\n                cartset([...cart, ...res.data]);\r\n                console.log(cart);\r\n          })\r\n          .catch((err)=>{\r\n              console.log(\"다시 체크해주세요!\");\r\n          })\r\n      },[]);\r\n\r\n        return (\r\n            <div>\r\n                <iframe src={URL} width=\"100%\" height=\"950px\"></iframe>         \r\n                <br/><br/>\r\n                <br/><br/>\r\n                <Accordion>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        포트폴리오 관리하기\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                      <Card.Body>\r\n                      <Table striped bordered hover variant=\"dark\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                              <th style = {{width : \"100px\", textAlign : \"center\"}}>수량</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>수정</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>삭제</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              cart.map(function(a,i){\r\n                                return (\r\n                                  <tr>\r\n                                    <th style = {{width : \"200px\", textAlign : \"center\"}}>{cart[i]?.name}</th>\r\n                                    <th style = {{width : \"200px\", textAlign : \"center\"}}>{cart[i]?.date}</th>\r\n                                    <th style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</th>\r\n                                    <th style = {{width : \"100px\", textAlign : \"center\"}}>{cart[i]?.count} 주</th>\r\n                                    <th style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.all_price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</th>\r\n                                    <th style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.memo}</th>\r\n\r\n                                    <th> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" \r\n                                    onClick={()=>{\r\n                                      modify_set(true);\r\n                                      }}>\r\n                                      수정</Button></th>\r\n                                      <Modify modify={modify} modify_set={modify_set} key={i}\r\n                                      name ={cart[i].name}\r\n                                      date ={cart[i].date}\r\n                                      price ={cart[i].price}\r\n                                      count ={cart[i].count}\r\n                                      memo ={cart[i].memo}\r\n                                      idx ={cart[i].idx}\r\n                                     />\r\n                                    <th> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" >삭제</Button></th>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n                            }\r\n                          </tbody>\r\n                        </Table>\r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"flex-end\"}} variant=\"secondary\">현금관리</Button> \r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"right\"}} variant=\"secondary\">매수</Button> \r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"right\"}} variant=\"secondary\">매도</Button>  \r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card> \r\n                </Accordion>\r\n                <br/><br/>\r\n                <br/><br/>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nfunction Modify(props) {\r\n  \r\n  return (\r\n    <>\r\n      <Modal show={props.modify} size = \"xl\"animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>종목 수정</Modal.Title>\r\n          </Modal.Header>\r\n                   \r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                    <th style = {{width : \"100px\", textAlign : \"center\"}}>수량</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                    <th style = {{width : \"70px\", textAlign : \"center\"}}>수정</th>\r\n                    <th style = {{width : \"70px\", textAlign : \"center\"}}>삭제</th>\r\n                  </tr>\r\n                  <th style = {{width : \"200px\", textAlign : \"center\"}}>{props.name}</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>{props.date}</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>{props.price}</th>\r\n                    <th style = {{width : \"100px\", textAlign : \"center\"}}>{props.count}</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>{props.idx}</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                    <th style = {{width : \"70px\", textAlign : \"center\"}}>수정</th>\r\n                    <th style = {{width : \"70px\", textAlign : \"center\"}}>삭제</th>\r\n                </thead>\r\n              </Table>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>{\r\n              props.modify_set(false)\r\n            }}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={()=>{\r\n              props.modify_set(false)\r\n            }}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Portfolio;",{"ruleId":"73","severity":1,"message":"74","line":6,"column":23,"nodeType":"75","messageId":"76","endLine":6,"endColumn":33},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":106,"endColumn":2},{"ruleId":"73","severity":1,"message":"84","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":25},{"ruleId":"73","severity":1,"message":"85","line":4,"column":46,"nodeType":"75","messageId":"76","endLine":4,"endColumn":50},{"ruleId":"73","severity":1,"message":"86","line":4,"column":51,"nodeType":"75","messageId":"76","endLine":4,"endColumn":60},{"ruleId":"87","severity":1,"message":"88","line":14,"column":26,"nodeType":"89","messageId":"90","endLine":14,"endColumn":34},{"ruleId":"91","severity":1,"message":"92","line":22,"column":7,"nodeType":"93","endLine":22,"endColumn":9,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":27,"column":13,"nodeType":"97","endLine":27,"endColumn":61},{"ruleId":"98","severity":1,"message":"99","line":29,"column":13,"nodeType":"97","endLine":29,"endColumn":81},{"ruleId":"73","severity":1,"message":"100","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"101","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":17},{"ruleId":"73","severity":1,"message":"102","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":14},{"ruleId":"73","severity":1,"message":"103","line":7,"column":16,"nodeType":"75","messageId":"76","endLine":7,"endColumn":26},{"ruleId":"73","severity":1,"message":"104","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"91","severity":1,"message":"105","line":25,"column":5,"nodeType":"93","endLine":25,"endColumn":7,"suggestions":"106"},{"ruleId":"73","severity":1,"message":"107","line":3,"column":9,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},{"ruleId":"73","severity":1,"message":"108","line":3,"column":14,"nodeType":"75","messageId":"76","endLine":3,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":19,"column":9,"nodeType":"93","endLine":19,"endColumn":11,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"96","line":23,"column":17,"nodeType":"97","endLine":23,"endColumn":63},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'RESERVED_EVENTS' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart' and 'props.id'. Either include them or remove the dependency array. You can also do a functional update 'cartset(c => ...)' if you only need 'cart' in the 'cartset' call.","ArrayExpression",["112"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Add_Button must be in PascalCase or SCREAMING_SNAKE_CASE","'products' is defined but never used.","'process' is defined but never used.","'Grid' is defined but never used.","'GridColumn' is defined but never used.","'Window' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["113"],"'Form' is defined but never used.","'FormControl' is defined but never used.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"115","fix":"119"},"Update the dependencies array to be: [cart, props.id]",{"range":"120","text":"121"},"Update the dependencies array to be: [props]",{"range":"122","text":"123"},{"range":"124","text":"121"},[921,923],"[cart, props.id]",[738,740],"[props]",[833,835]]