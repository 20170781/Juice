[{"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\index.js":"1","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\App.js":"2","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\reportWebVitals.js":"3","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\stock_page.js":"4","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Register.js":"5","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\data\\saying.js":"6","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Service.js":"7","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Interest.js":"8","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart.js":"9","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Login.js":"10","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Portfolio.js":"11"},{"size":619,"mtime":1614317447445,"results":"12","hashOfConfig":"13"},{"size":10250,"mtime":1615267394141,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1614317447445,"results":"15","hashOfConfig":"13"},{"size":2213,"mtime":1615204252820,"results":"16","hashOfConfig":"13"},{"size":3907,"mtime":1615276071785,"results":"17","hashOfConfig":"13"},{"size":4513,"mtime":1614317447440,"results":"18","hashOfConfig":"13"},{"size":193,"mtime":1614317447439,"results":"19","hashOfConfig":"13"},{"size":4698,"mtime":1615274568962,"results":"20","hashOfConfig":"13"},{"size":1199,"mtime":1614691088967,"results":"21","hashOfConfig":"13"},{"size":2536,"mtime":1615204217708,"results":"22","hashOfConfig":"13"},{"size":12141,"mtime":1615358274684,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"kujy6y",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\index.js",["53"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter,HashRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n     <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["54","55"],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\App.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\reportWebVitals.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\stock_page.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Register.js",["56"],"import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Alert} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nfunction Register (props){\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [tel, setTel] = useState(\"\");\r\n    const [birth, setBirth] = useState(\"\");\r\n    const [repassword, setRepassword] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        let temp = localStorage.getItem('email');\r\n        console.log(temp); \r\n        props.idset(temp);\r\n      },[])\r\n\r\n    return (\r\n      <div>\r\n          <form className=\"register\">\r\n                <h3 style={{\"padding-top\":\"20px\"}}>회원가입</h3>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n                    <label>이름</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"홍길동\"  onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n                    <label>이메일 주소</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"StockService@naver.com\" onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setBirth(e.target.value)}>\r\n                    <label>생년월일</label>\r\n                    <input type=\"birth\" className=\"form-control\" placeholder=\"19970101\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setTel(e.target.value)}>\r\n                    <label>전화번호</label>\r\n                    <input type=\"tel\" className=\"form-control\" placeholder=\"010-****-****\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setPassword(e.target.value)}>\r\n                    <label>비밀번호</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"password\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setRepassword(e.target.value)}>\r\n                    <label>비밀번호 확인</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"password\" />\r\n                </div>\r\n                {\r\n                    password ===repassword\r\n                    ? <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={()=>{\r\n                        axios.post('./register',{name : {name}, email :{email}, birth : {birth} , tel : {tel}, password : {password}})\r\n                        .then((res)=>{\r\n                            \r\n                        })\r\n                        .catch((err)=>{\r\n                              \r\n                        })\r\n                    }}>회원가입하기 </button>\r\n                    :\r\n                    <Alert variant=\"danger\">\r\n                    <Alert.Heading>비밀번호 확인 오류</Alert.Heading>\r\n                    <p>\r\n                      비밀번호가 달라요, 다시 한 번 확인 해주세요~\r\n                    </p>\r\n                  </Alert>\r\n                }\r\n                \r\n                <p className=\"forgot-password text-right\">\r\n                    이미 회원가입을 하셨나요? <a href=\"/login\">로그인하기</a>\r\n                </p>\r\n\r\n\r\n            </form>\r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\data\\saying.js",["57"],"export default \r\n[\r\n    {\r\n        id : 0,\r\n        name : \"워렌버핏\",\r\n        saying : \"주식시장은 '적극적인 자에게서 참을성이 많은 자에게로' 돈이 넘어가도록 설계되어 있다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 1,\r\n        name : \"하워드막스\",\r\n        saying : \"가치에 대한 확고한 신념이 있어야만 수익이 발생하지 않는 기간을 버텨낼 수 있다.\"\r\n        ,image : \"./하워드막스.png\"\r\n    },\r\n    {\r\n        id : 2,\r\n        name : \"그레이엄\",\r\n        saying : \"투자란 철저한 분석을 통해 원금을 안전하게 지키면서도 만족스러운 수익을 확보하는 것이다. 그렇지 않으면 투기다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    },\r\n    {\r\n        id : 3,\r\n        name : \"워렌버핏\",\r\n        saying : \"평범한 지능을 갖추고 있다면 조바심을 절제할 수 있어야 한다. 조바심 때문에 많은 투자자들이 문제에 부딪힌다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 4,\r\n        name : \"세스클라만\",\r\n        saying : \" 투자자들은 가격이 하락할 때 공포를 이기는 법을 배워야 하며, 가격이 상승할 때 너무 열광하거나 욕심부리지 않는 법을 깨달아야 한다.\"\r\n        ,image : \"./세스클라만.png\"\r\n    },\r\n    {\r\n        id : 5,\r\n        name : \"찰리멍거\",\r\n        saying : \"이익이 확실할 때만 움직이십시오. 이건 가장 기본적인 것입니다. 승산을 이해해야 하고, 유리할 때만 베팅하는 훈련을 해야 합니다.\"\r\n        ,image : \"./찰리멍거.png\"\r\n    },\r\n    {\r\n        id : 6,\r\n        name : \"하워드막스\",\r\n        saying : \"성공은 그 자체로 실패의 씨앗을 품고 있으며, 실패는 그 자체로 성공의 씨앗을 품고 있다.\"\r\n        ,image : \"./하워드막스.png\"\r\n    },\r\n    {\r\n        id : 7,\r\n        name : \"워렌버핏\",\r\n        saying : \"우리는 비관론이 있을 때 투자하고자 한다. 우리가 비관론을 좋아해서가 아니라, 비관론 덕분에 주가가 싸지기 때문이다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 8,\r\n        name : \"세스클라만\",\r\n        saying : \"돈을 빨리 벌고자 하는 유혹이 너무 커서 많은 투자자들이 대중에 역하는 것을 어려워한다.\"\r\n        ,image : \"./세스클라만.png\"\r\n    },\r\n    {\r\n        id : 9,\r\n        name : \"피터린치\",\r\n        saying : \"인기 업종의 인기 주식에 투자해서 얻는 수익으로 살아가려한다면, 생활보조금을 받으며 살아가는 신세가 되는 것은 시간 문제다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 10,\r\n        name : \"코스톨라니\",\r\n        saying : \"투자자는 무엇이 옳고 그른지에 대해 자신만의 생각과 아이디어, 방향을 가지고 있어야 하며, 대중에 휩쓸려 감정적으로 행동하지 않아야 한다.\"\r\n        ,image : \"./코스톨라니.png\"\r\n    },\r\n    {\r\n        id : 11,\r\n        name : \"피터린치\",\r\n        saying : \"추가 하락이 두려워 좋은 가격의 기업을 포기한다면 장기적으로 아주 큰 댓가를 치를 것이다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 12,\r\n        name : \"그레이엄\",\r\n        saying : \"현명한 투자자는 비관주의자에게서 주식을 사서 낙관주의자에게 판다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    },\r\n    {\r\n        id : 13,\r\n        name : \"찰리멍거\",\r\n        saying : \"질투는 미친 짓입니다. 100% 파멸을 부릅니다. 일치감치 질투에서 벗어나면 인생이 훨씬 나아집니다.\"\r\n        ,image : \"./찰리멍거.png\"\r\n    },\r\n    {\r\n        id : 14,\r\n        name : \"템플턴\",\r\n        saying : \"최적의 매수 타이밍은 시장에 피가 낭자할 때다. 설령 그것이 당신의 피일지라도 말이다.\"\r\n        ,image : \"./템플턴.png\"\r\n    },\r\n    {\r\n        id : 15,\r\n        name : \"피터린치\",\r\n        saying : \"투자의 성공 여부는 얼마나 오랫동안 세상의 비관론을 무시할 수 있는지에 달려있다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 16,\r\n        name : \"그레이엄\",\r\n        saying : \"현명한 투자자일지라도 대중을 따라가지 않으려면 대단한 의지력이 필요하다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    }\r\n    \r\n]","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Service.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Interest.js",["58","59","60","61","62","63","64","65","66"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { RESERVED_EVENTS } from 'socket.io/dist/socket';\r\nimport {Modal, Button,Table,Form,FormControl,Card,Accordion} from 'react-bootstrap';\r\n\r\nfunction Interest(props){\r\n   let [URL,URLset] = useState(\"https://public.tableau.com/views/juice_16149437075470/interest?:language=en&:display_count=y&:origin=viz_share_link:showVizHome=no&:embed=true&종목명=\");\r\n   let [cart,cartset] =useState([]);\r\n   let [add,addset] = useState(\"\");\r\n   useEffect(()=>{\r\n    let temp = localStorage.getItem('email');\r\n    console.log(temp); \r\n    props.idset(temp);\r\n  },[])\r\n\r\n   useEffect(()=>{\r\n        axios.post('/interest', encodeURIComponent(props.id))\r\n        .then((res)=>{\r\n          console.log(\"좋아 관심종목 데이터 받았어\");\r\n            res.data.map(function(a,i){\r\n                URLset(URL=>URL+res.data[i].stock+\",\");\r\n                cartset([...cart,...res.data]);\r\n              })\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"다시 체크해주세요!\");\r\n        })\r\n    },[],[add]);\r\n\r\n    return (\r\n        <div>\r\n          {URL}\r\n            <iframe src={URL} width=\"100%\" height=\"950px\"></iframe>\r\n            <br/>\r\n            <Add_Button id = {props.id} cart = {cart} add={add} addset={addset}></Add_Button>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Add_Button(props) {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n            관심종목 관리\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose} size = \"xl\" animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.id} 님의 종목 관리</Modal.Title>\r\n          </Modal.Header>\r\n  \r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\" style={{width : \"300px\", align : \"center\"}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"500px\", textAlign : \"center\"}}>관심종목</th>\r\n                  </tr>\r\n                </thead>  \r\n                <tbody>\r\n                    {\r\n                      props.cart.map(function(a,i){\r\n                        return (\r\n                          <div>\r\n                            <tr>\r\n                              <td style = {{width : \"300px\", textAlign : \"center\"}}>{props.cart[i]?.stock}</td>\r\n                              <td style = {{width : \"100px\", textAlign : \"center\"}}> <Button variant=\"secondary\" onClick={()=>{\r\n                                axios.post('/interest_delete',props.cart[i]?.stock)\r\n                                .then((res)=>{\r\n                                  console.log(\"삭제성공\")\r\n                                })\r\n                                .catch(()=>{\r\n                                  console.log(\"삭제실패\")\r\n                                })\r\n                              }}> 삭제 </Button></td>\r\n                            </tr> \r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                </tbody>\r\n\r\n              </Table>\r\n                <Form inline>\r\n                  <FormControl type=\"text\" placeholder=\"예) 삼성전자\" className=\"mr-sm-2\"onChange={(e)=>{props.addset(e.target.value)}}/>\r\n                  <Button variant=\"outline-success\" onClick = {()=>{\r\n                    axios.post('/interest_add',{email : props.id, stock : encodeURIComponent(props.add)})\r\n                    .then((res)=>{\r\n                      console.log(\"관심종목 추가 성공\")\r\n                    })\r\n                    .catch((err)=>{\r\n                      console.log(\"관심종목 추가 실패\")\r\n                    })\r\n                  }}>관심종목 추가</Button>\r\n                </Form>\r\n\r\n              \r\n            </Modal.Body>\r\n                    \r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nfunction sell(props){\r\n\r\n//   insert into portfolio(email, name, date, price, count, all_price, choice, memo)\r\n// values ('이메일','종목명','날짜',매도가격,수량*(-1),매도가격*수량,'매도','메모');\r\n\r\n  return (\r\n    <>\r\n  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Interest;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart.js",["67","68","69","70","71"],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Login.js",["72"],"import React, { useEffect, useState } from \"react\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import \"./Login.css\";\r\nimport axios from 'axios';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [alert,alertset] = useState(true);\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  useEffect(()=>{\r\n    let temp = localStorage.getItem('email');\r\n    console.log(temp);  \r\n    props.idset(temp);\r\n  },[])\r\n\r\n  return (\r\n        <div className=\"Login\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>이메일</Form.Label>\r\n            <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>비밀번호</Form.Label>\r\n            <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={()=>{\r\n              axios.post('./login',{email:{email},password:{password}})\r\n              .then((res)=>{\r\n                if(res.data === false){\r\n                  alertset(false);\r\n                }\r\n                else{\r\n                  alertset(true);\r\n                  props.idset(email);\r\n                  localStorage.setItem('email',email);\r\n                 \r\n                } \r\n              })\r\n              .catch((err)=>{\r\n                alertset(false);\r\n              })\r\n            }}>\r\n            로그인\r\n            </Button>\r\n        </Form>\r\n          {\r\n            alert ===false\r\n            ? \r\n            <Alert variant=\"danger\">\r\n            <Alert.Heading>로그인 에러</Alert.Heading>\r\n            <p>\r\n              이메일 혹은 비밀번호가 틀렸습니다. 다시 확인해주세요.\r\n            </p>\r\n          </Alert>\r\n          :\r\n          null\r\n          }\r\n        </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Portfolio.js",["73","74","75","76","77","78","79","80","81","82","83"],"\r\nimport React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Form,FormControl,Button,Modal,Table,Card,Accordion} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction Portfolio(props){\r\n  let [URL,URLset] = useState(\"https://public.tableau.com/views/juice_16149437075470/portfolio?:language=en&:display_count=y&:origin=viz_share_link:showVizHome=no&:embed=true&Email=\"+props.id);\r\n  let [cart, cartset] = useState([]);\r\n      const [modalState, setModalState] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n     });\r\n     \r\n      const [sell, setsell] = useState({\r\n      showModal: false,\r\n      stockInfo: {},\r\n      });\r\n\r\n      const [buy, setbuy] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n      });\r\n\r\n      const [cash, setcash] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n      });\r\n\r\n        useEffect(()=>{\r\n          let temp = localStorage.getItem('email');\r\n          console.log(temp); \r\n          props.idset(temp);\r\n        },[]);\r\n        \r\n        useEffect(()=>{\r\n          axios.post('/portfolio', encodeURIComponent(props.id))\r\n          .then((res)=>{\r\n                console.log(\"좋아 포트폴리오 데이터 받았어\");\r\n                cartset([...res.data]);\r\n          })\r\n          .catch((err)=>{\r\n              console.log(\"다시 체크해주세요!\");\r\n          })\r\n      },[]);\r\n\r\n        return (\r\n            <div>\r\n              {URL}\r\n              <iframe src={URL} width=\"1500px\" height=\"950px\"></iframe>\r\n               <Accordion>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        포트폴리오 관리하기\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                      <Card.Body>\r\n                      <Table striped bordered hover variant=\"dark\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                              <th style = {{width : \"100px\", textAlign : \"center\"}}>수량</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>수정</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>삭제</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              cart.map(function(a,i){\r\n                                return (\r\n                                  <tr>\r\n                                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{cart[i]?.name}</td>\r\n                                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{cart[i]?.date}</td>\r\n                                    <td style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</td>\r\n                                    <td style = {{width : \"100px\", textAlign : \"center\"}}>{cart[i]?.count} 주</td>\r\n                                    <td style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.all_price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</td>\r\n                                    <td style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.memo}</td>\r\n\r\n                                    <td> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" \r\n                                    onClick={() => {\r\n                                        setModalState({\r\n                                            stockInfo: cart[i],\r\n                                            showModal: true,\r\n                                        })\r\n                                    }}>\r\n                                      수정</Button></td>\r\n                                      \r\n                                    \r\n                                    <td> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" >삭제</Button></td>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n                            }\r\n                            \r\n                          </tbody>\r\n                        </Table>\r\n                         {\r\n                           cart.map(function(a,i){\r\n                             return (\r\n                               <div>\r\n                                   <Modify modalState={modalState} setModalState={setModalState}></Modify>\r\n                               </div>\r\n                             )\r\n                           })\r\n                         }\r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"flex-end\"}} variant=\"secondary\">현금관리</Button> \r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"right\"}} variant=\"secondary\">매수</Button> \r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"right\"}} variant=\"secondary\" \r\n                        onClick={()=>{\r\n                          setsell({\r\n                            stockInfo: \"\",\r\n                            showModal: true,\r\n                        })\r\n                        }}\r\n                        >매도</Button>  \r\n                        <Sell sell={sell} setsell={setsell} id={props.id}></Sell>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card> \r\n                </Accordion>\r\n                <br/><br/>\r\n                <br/><br/>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nfunction Modify(props) {\r\n  return (\r\n    <>\r\n      <Modal show={props.modalState.showModal} size = \"xl\" animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>종목 수정</Modal.Title>\r\n          </Modal.Header>\r\n                   \r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                    <th style = {{width : \"100px\", textAlign : \"center\"}}>수량</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                  </tr>\r\n               \r\n                </thead>\r\n                <tbody>\r\n                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.name} </td>\r\n                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.date} </td>\r\n                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.price} </td>\r\n                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.count} </td>\r\n                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.all_price} </td>\r\n                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.memo} </td>\r\n                </tbody>\r\n              </Table>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>{\r\n              props.setModalState({\r\n                stockInfo: \"\",\r\n                showModal : false\r\n            })\r\n            }}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick ={()=>{\r\n              props.setModalState({\r\n              stockInfo: \"\",\r\n               showModal : false,\r\n              })\r\n            }}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>  \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nfunction Sell(props){\r\n    const [name, setname] = useState(\"\");\r\n    const [date, setdate] = useState(\"\");\r\n    const [price, setprice] = useState(0);\r\n    const [count, setcount] = useState(0);\r\n    const [memo, setmemo] = useState(\"\");\r\n    const email = props.id;\r\n    return (\r\n      <>\r\n        <Modal show={props.sell.showModal} size = \"xl\" animation={true}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>종목 수정</Modal.Title>\r\n              </Modal.Header>\r\n                      \r\n              <Modal.Body>\r\n                  <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                        <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>수량</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                      </tr>\r\n                  \r\n                    </thead>\r\n                    <tbody style ={{ textAlign : \"center\", align : \"center\",  margin :\"0 auto\"}}>\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"삼성전자\" onChange={(e) => setname(e.target.value)}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"date\" className=\"form-control\" onChange={(e) => setdate(e.target.value.toString())}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"price\" className=\"form-control\" placeholder=\"0 원\"  onChange={(e) => setprice(e.target.value)}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"number\" className=\"form-control\" placeholder=\"0 주\"  onChange={(e) => setcount(e.target.value)}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    매도\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"메모\"  onChange={(e) => setmemo(e.target.value)}/>\r\n                  </td>\r\n                    </tbody>\r\n                  </Table>\r\n              </Modal.Body>\r\n              \r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>{\r\n                  props.setsell({\r\n                    stockInfo: \"\",\r\n                    showModal : false\r\n                })\r\n                }}>\r\n                  닫기\r\n                </Button>\r\n                \r\n                <Button variant=\"primary\" onClick ={()=>{\r\n                  props.setsell({\r\n                  stockInfo: \"\",\r\n                  showModal : false,\r\n                  })\r\n                  axios.post('/portfolio_sell',{name : {name}, date : {date}, price : {price}, count : {count}, memo : {memo}, email:{email}})\r\n                  .then(()=>{\r\n                    \r\n                  })\r\n                  .catch(()=>{\r\n\r\n                  })\r\n                }}>\r\n                  저장하기\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>   \r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Portfolio;\r\n",{"ruleId":"84","severity":1,"message":"85","line":6,"column":23,"nodeType":"86","messageId":"87","endLine":6,"endColumn":33},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":19,"column":9,"nodeType":"94","endLine":19,"endColumn":11,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":1,"nodeType":"98","endLine":106,"endColumn":2},{"ruleId":"84","severity":1,"message":"99","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":25},{"ruleId":"84","severity":1,"message":"100","line":4,"column":46,"nodeType":"86","messageId":"87","endLine":4,"endColumn":50},{"ruleId":"84","severity":1,"message":"101","line":4,"column":51,"nodeType":"86","messageId":"87","endLine":4,"endColumn":60},{"ruleId":"92","severity":1,"message":"93","line":14,"column":5,"nodeType":"94","endLine":14,"endColumn":7,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":20,"column":26,"nodeType":"105","messageId":"106","endLine":20,"endColumn":34},{"ruleId":"92","severity":1,"message":"107","line":28,"column":7,"nodeType":"94","endLine":28,"endColumn":9,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":33,"column":13,"nodeType":"111","endLine":33,"endColumn":59},{"ruleId":"112","severity":1,"message":"113","line":35,"column":13,"nodeType":"111","endLine":35,"endColumn":81},{"ruleId":"84","severity":1,"message":"114","line":118,"column":10,"nodeType":"86","messageId":"87","endLine":118,"endColumn":14},{"ruleId":"84","severity":1,"message":"115","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":16},{"ruleId":"84","severity":1,"message":"116","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":17},{"ruleId":"84","severity":1,"message":"117","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"84","severity":1,"message":"118","line":7,"column":16,"nodeType":"86","messageId":"87","endLine":7,"endColumn":26},{"ruleId":"84","severity":1,"message":"119","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":24,"column":5,"nodeType":"94","endLine":24,"endColumn":7,"suggestions":"120"},{"ruleId":"84","severity":1,"message":"121","line":4,"column":9,"nodeType":"86","messageId":"87","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"122","line":4,"column":14,"nodeType":"86","messageId":"87","endLine":4,"endColumn":25},{"ruleId":"84","severity":1,"message":"123","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":14},{"ruleId":"84","severity":1,"message":"124","line":7,"column":12,"nodeType":"86","messageId":"87","endLine":7,"endColumn":18},{"ruleId":"84","severity":1,"message":"125","line":19,"column":14,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"126","line":19,"column":19,"nodeType":"86","messageId":"87","endLine":19,"endColumn":25},{"ruleId":"84","severity":1,"message":"127","line":24,"column":14,"nodeType":"86","messageId":"87","endLine":24,"endColumn":18},{"ruleId":"84","severity":1,"message":"128","line":24,"column":20,"nodeType":"86","messageId":"87","endLine":24,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":33,"column":11,"nodeType":"94","endLine":33,"endColumn":13,"suggestions":"129"},{"ruleId":"92","severity":1,"message":"130","line":44,"column":9,"nodeType":"94","endLine":44,"endColumn":11,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"110","line":49,"column":15,"nodeType":"111","endLine":49,"endColumn":63},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["134"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'RESERVED_EVENTS' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.",["135"],"array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'cart' and 'props.id'. Either include them or remove the dependency array. You can also do a functional update 'cartset(c => ...)' if you only need 'cart' in the 'cartset' call.",["136"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Add_Button must be in PascalCase or SCREAMING_SNAKE_CASE","'sell' is defined but never used.","'products' is defined but never used.","'process' is defined but never used.","'Grid' is defined but never used.","'GridColumn' is defined but never used.","'Window' is defined but never used.",["137"],"'Form' is defined but never used.","'FormControl' is defined but never used.","'moment' is defined but never used.","'URLset' is assigned a value but never used.","'buy' is assigned a value but never used.","'setbuy' is assigned a value but never used.","'cash' is assigned a value but never used.","'setcash' is assigned a value but never used.",["138"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},{"desc":"143","fix":"144"},{"desc":"140","fix":"145"},{"desc":"140","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [props]",{"range":"149","text":"150"},{"range":"151","text":"150"},"Update the dependencies array to be: [cart, props.id]",{"range":"152","text":"153"},{"range":"154","text":"150"},{"range":"155","text":"150"},"Update the dependencies array to be: [props.id]",{"range":"156","text":"157"},[640,642],"[props]",[629,631],[1046,1048],"[cart, props.id]",[712,714],[1039,1041],[1368,1370],"[props.id]"]