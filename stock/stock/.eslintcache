[{"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\index.js":"1","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\App.js":"2","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\reportWebVitals.js":"3","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\stock_page.js":"4","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Register.js":"5","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\data\\saying.js":"6","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Service.js":"7","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Interest.js":"8","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Login.js":"9","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Portfolio.js":"10","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Autocomplete.js":"11","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chartmonth.js":"12","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chartyear.js":"13","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart.js":"14","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart2.js":"15"},{"size":619,"mtime":1614317447445,"results":"16","hashOfConfig":"17"},{"size":10657,"mtime":1616408547399,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1614317447445,"results":"19","hashOfConfig":"17"},{"size":5130,"mtime":1616407623567,"results":"20","hashOfConfig":"17"},{"size":3907,"mtime":1615461433154,"results":"21","hashOfConfig":"17"},{"size":4516,"mtime":1615610283421,"results":"22","hashOfConfig":"17"},{"size":193,"mtime":1614317447439,"results":"23","hashOfConfig":"17"},{"size":4655,"mtime":1615793091226,"results":"24","hashOfConfig":"17"},{"size":2536,"mtime":1615204217708,"results":"25","hashOfConfig":"17"},{"size":29353,"mtime":1616225731400,"results":"26","hashOfConfig":"17"},{"size":2712,"mtime":1615811652159,"results":"27","hashOfConfig":"17"},{"size":3986,"mtime":1615710501578,"results":"28","hashOfConfig":"17"},{"size":4082,"mtime":1616123769547,"results":"29","hashOfConfig":"17"},{"size":5178,"mtime":1616407567487,"results":"30","hashOfConfig":"17"},{"size":3029,"mtime":1616337909819,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"kujy6y",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"35"},"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\index.js",["74"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter,HashRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n     <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\App.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\reportWebVitals.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\stock_page.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Register.js",["77"],"import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Alert} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nfunction Register (props){\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [tel, setTel] = useState(\"\");\r\n    const [birth, setBirth] = useState(\"\");\r\n    const [repassword, setRepassword] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        let temp = localStorage.getItem('email');\r\n        console.log(temp); \r\n        props.idset(temp);\r\n      },[])\r\n\r\n    return (\r\n      <div>\r\n          <form className=\"register\">\r\n                <h3 style={{\"padding-top\":\"20px\"}}>회원가입</h3>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n                    <label>이름</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"홍길동\"  onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n                    <label>이메일 주소</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"StockService@naver.com\" onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setBirth(e.target.value)}>\r\n                    <label>생년월일</label>\r\n                    <input type=\"birth\" className=\"form-control\" placeholder=\"19970101\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setTel(e.target.value)}>\r\n                    <label>전화번호</label>\r\n                    <input type=\"tel\" className=\"form-control\" placeholder=\"010-****-****\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setPassword(e.target.value)}>\r\n                    <label>비밀번호</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"password\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}} onChange={(e) => setRepassword(e.target.value)}>\r\n                    <label>비밀번호 확인</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"password\" />\r\n                </div>\r\n                {\r\n                    password ===repassword\r\n                    ? <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={()=>{\r\n                        axios.post('./register',{name : {name}, email :{email}, birth : {birth} , tel : {tel}, password : {password}})\r\n                        .then((res)=>{\r\n                            \r\n                        })\r\n                        .catch((err)=>{\r\n                              \r\n                        })\r\n                    }}>회원가입하기 </button>\r\n                    :\r\n                    <Alert variant=\"danger\">\r\n                    <Alert.Heading>비밀번호 확인 오류</Alert.Heading>\r\n                    <p>\r\n                      비밀번호가 달라요, 다시 한 번 확인 해주세요~\r\n                    </p>\r\n                  </Alert>\r\n                }\r\n                \r\n                <p className=\"forgot-password text-right\">\r\n                    이미 회원가입을 하셨나요? <a href=\"/login\">로그인하기</a>\r\n                </p>\r\n\r\n\r\n            </form>\r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\data\\saying.js",["78"],"export default \r\n[\r\n    {\r\n        id : 0,\r\n        name : \"워렌버핏\",\r\n        saying : \"주식시장은 '적극적인 자에게서 참을성이 많은 자에게로' 돈이 넘어가도록 설계되어 있다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 1,\r\n        name : \"하워드막스\",\r\n        saying : \"가치에 대한 확고한 신념이 있어야만 수익이 발생하지 않는 기간을 버텨낼 수 있다.\"\r\n        ,image : \"./하워드막스.png\"\r\n    },\r\n    {\r\n        id : 2,\r\n        name : \"그레이엄\",\r\n        saying : \"투자란 철저한 분석을 통해 원금을 안전하게 지키면서도 만족스러운 수익을 확보하는 것이다. 그렇지 않으면 투기다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    },\r\n    {\r\n        id : 3,\r\n        name : \"워렌버핏\",\r\n        saying : \"평범한 지능을 갖추고 있다면 조바심을 절제할 수 있어야 한다. 조바심 때문에 많은 투자자들이 문제에 부딪힌다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 4,\r\n        name : \"세스클라만\",\r\n        saying : \" 투자자들은 가격이 하락할 때 공포를 이기는 법을 배워야 하며, 가격이 상승할 때 너무 열광하거나 욕심부리지 않는 법을 깨달아야 한다.\"\r\n        ,image : \"./세스클라만.png\"\r\n    },\r\n    {\r\n        id : 5,\r\n        name : \"찰리멍거\",\r\n        saying : \"이익이 확실할 때만 움직이십시오. 이건 가장 기본적인 것입니다. 승산을 이해해야 하고, 유리할 때만 베팅하는 훈련을 해야 합니다.\"\r\n        ,image : \"./찰리멍거.png\"\r\n    },\r\n    {\r\n        id : 6,\r\n        name : \"하워드막스\",\r\n        saying : \"성공은 그 자체로 실패의 씨앗을 품고 있으며, 실패는 그 자체로 성공의 씨앗을 품고 있다.\"\r\n        ,image : \"./하워드막스.png\"\r\n    },\r\n    {\r\n        id : 7,\r\n        name : \"워렌버핏\",\r\n        saying : \"우리는 비관론이 있을 때 투자하고자 한다. 우리가 비관론을 좋아해서가 아니라, 비관론 덕분에 주가가 싸지기 때문이다.\"\r\n        ,image : \"./워렌버핏.png\"\r\n    },\r\n    {\r\n        id : 8,\r\n        name : \"세스클라만\",\r\n        saying : \"돈을 빨리 벌고자 하는 유혹이 너무 커서 많은 투자자들이 대중에 역하는 것을 어려워한다.\"\r\n        ,image : \"./세스클라만.png\"\r\n    },\r\n    {\r\n        id : 9,\r\n        name : \"피터린치\",\r\n        saying : \"인기 업종의 인기 주식에 투자해서 얻는 수익으로 살아가려한다면, 생활보조금을 받으며 살아가는 신세가 되는 것은 시간 문제다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 10,\r\n        name : \"코스톨라니\",\r\n        saying : \"투자자는 무엇이 옳고 그른지에 대해 자신만의 생각과 아이디어, 방향을 가지고 있어야 하며, 대중에 휩쓸려 감정적으로 행동하지 않아야 한다.\"\r\n        ,image : \"./코스톨라니.png\"\r\n    },\r\n    {\r\n        id : 11,\r\n        name : \"피터린치\",\r\n        saying : \"추가 하락이 두려워 좋은 가격의 기업을 포기한다면 장기적으로 아주 큰 댓가를 치를 것이다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 12,\r\n        name : \"그레이엄\",\r\n        saying : \"현명한 투자자는 비관주의자에게서 주식을 사서 낙관주의자에게 판다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    },\r\n    {\r\n        id : 13,\r\n        name : \"찰리멍거\",\r\n        saying : \"질투는 미친 짓입니다. 100% 파멸을 부릅니다. 일치감치 질투에서 벗어나면 인생이 훨씬 나아집니다.\"\r\n        ,image : \"./찰리멍거.png\"\r\n    },\r\n    {\r\n        id : 14,\r\n        name : \"템플턴\",\r\n        saying : \"최적의 매수 타이밍은 시장에 피가 낭자할 때다. 설령 그것이 당신의 피일지라도 말이다.\"\r\n        ,image : \"./템플턴.png\"\r\n    },\r\n    {\r\n        id : 15,\r\n        name : \"피터린치\",\r\n        saying : \"투자의 성공 여부는 얼마나 오랫동안 세상의 비관론을 무시할 수 있는지에 달려있다.\"\r\n        ,image : \"./피터린치.png\"\r\n    },\r\n    {\r\n        id : 16,\r\n        name : \"그레이엄\",\r\n        saying : \"현명한 투자자일지라도 대중을 따라가지 않으려면 대단한 의지력이 필요하다.\"\r\n        ,image : \"./그레이엄.png\"\r\n    }\r\n    \r\n]   ","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Service.js",[],"C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Interest.js",["79","80","81","82","83","84","85","86"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { RESERVED_EVENTS } from 'socket.io/dist/socket';\r\nimport {Modal, Button,Table,Form,FormControl,Card,Accordion} from 'react-bootstrap';\r\n\r\nfunction Interest(props){\r\n   let [URL,URLset] = useState(\"https://public.tableau.com/views/juice_16149437075470/interest?:language=en&:display_count=y&:origin=viz_share_link:showVizHome=no&:embed=true&종목명=\");\r\n   let [cart,cartset] =useState([]);\r\n   let [add,addset] = useState(\"\");\r\n   useEffect(()=>{\r\n    let temp = localStorage.getItem('email');\r\n    console.log(temp); \r\n    props.idset(temp);\r\n  },[])\r\n\r\n   useEffect(()=>{\r\n        axios.post('/interest', encodeURIComponent(props.id))\r\n        .then((res)=>{\r\n          console.log(\"좋아 관심종목 데이터 받았어\");\r\n            res.data.map(function(a,i){\r\n                URLset(URL=>URL+res.data[i].stock+\",\");\r\n                cartset([...res.data]);\r\n              })\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"다시 체크해주세요!\");\r\n        })\r\n    },[add],[]);\r\n\r\n    return (\r\n        <div>\r\n            <iframe src={URL} width=\"100%\" height=\"950px\"></iframe>\r\n            <br/>\r\n            <Add_Button id = {props.id} cart = {cart} cartset = {cartset} add={add} addset={addset}></Add_Button>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Add_Button(props) {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n            관심종목 관리\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose} size = \"l\" animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.id} 님의 종목 관리</Modal.Title>\r\n          </Modal.Header>\r\n  \r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\" style={{width : \"300px\", align : \"center\"}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"500px\", textAlign : \"center\"}}>관심종목</th>\r\n                  </tr>\r\n                </thead>  \r\n                <tbody>\r\n                    {\r\n                      props.cart.map(function(a,i){\r\n                        return (\r\n                          <div>\r\n                            <tr>\r\n                              <td style = {{width : \"300px\", textAlign : \"center\"}}>{props.cart[i]?.stock}</td>\r\n                              <td style = {{width : \"100px\", textAlign : \"center\"}}> <Button variant=\"secondary\" onClick={()=>{\r\n                                axios.post('/interest_delete',props.cart[i]?.stock)\r\n                                .then((res)=>{\r\n                                  props.addset(props.add+1);\r\n                                  console.log(\"삭제성공\")\r\n                                })\r\n                                .catch(()=>{\r\n                                  props.addset(props.add+1);\r\n                                  console.log(\"삭제실패\")\r\n                                })\r\n                              }}> 삭제 </Button></td>\r\n                            </tr> \r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                </tbody>\r\n\r\n              </Table>\r\n                <Form inline>\r\n                  <FormControl type=\"text\" placeholder=\"예) 삼성전자\" className=\"mr-sm-2\"onChange={(e)=>{props.addset(e.target.value)}}/>\r\n                  <Button variant=\"outline-success\" onClick = {()=>{\r\n                    axios.post('/interest_add',{email : props.id, stock : encodeURIComponent(props.add)})\r\n                    .then((res)=>{\r\n                      props.addset(props.add+1);\r\n                      console.log(\"관심종목 추가 성공\");\r\n                    })\r\n                    .catch((err)=>{\r\n                      props.addset(props.add+1);  \r\n                      console.log(\"관심종목 추가 실패\")\r\n                    })\r\n                  }}>관심종목 추가</Button>\r\n                </Form>\r\n\r\n              \r\n            </Modal.Body>\r\n                    \r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport default Interest;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Login.js",["87"],"import React, { useEffect, useState } from \"react\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import \"./Login.css\";\r\nimport axios from 'axios';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [alert,alertset] = useState(true);\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  useEffect(()=>{\r\n    let temp = localStorage.getItem('email');\r\n    console.log(temp);  \r\n    props.idset(temp);\r\n  },[])\r\n\r\n  return (\r\n        <div className=\"Login\" style={{\"width\" : \"700px\", \"align\" : \"center\", \"margin\":\"0 auto\"}}>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>이메일</Form.Label>\r\n            <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>비밀번호</Form.Label>\r\n            <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={()=>{\r\n              axios.post('./login',{email:{email},password:{password}})\r\n              .then((res)=>{\r\n                if(res.data === false){\r\n                  alertset(false);\r\n                }\r\n                else{\r\n                  alertset(true);\r\n                  props.idset(email);\r\n                  localStorage.setItem('email',email);\r\n                 \r\n                } \r\n              })\r\n              .catch((err)=>{\r\n                alertset(false);\r\n              })\r\n            }}>\r\n            로그인\r\n            </Button>\r\n        </Form>\r\n          {\r\n            alert ===false\r\n            ? \r\n            <Alert variant=\"danger\">\r\n            <Alert.Heading>로그인 에러</Alert.Heading>\r\n            <p>\r\n              이메일 혹은 비밀번호가 틀렸습니다. 다시 확인해주세요.\r\n            </p>\r\n          </Alert>\r\n          :\r\n          null\r\n          }\r\n        </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Portfolio.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"\r\nimport React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Form,FormControl,Button,Modal,Table,Card,Accordion} from 'react-bootstrap';\r\n\r\nfunction Portfolio(props){\r\n  let [URL,URLset] = useState(\"https://public.tableau.com/views/juice_16149437075470/portfolio?:language=en&:display_count=y&:origin=viz_share_link:showVizHome=no&:embed=true&Email=\"+props.id);\r\n  let [cart, cartset] = useState([]);\r\n  let [cart2, cart2set] = useState([]);\r\n  let [add,addset] = useState(\"\");\r\n      const [modalState, setModalState] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n     });\r\n     \r\n     const [modal2State, setModal2State] = useState({\r\n      showModal: false,\r\n      stockInfo: {},\r\n   });\r\n\r\n      const [sell, setsell] = useState({\r\n      showModal: false,\r\n      stockInfo: {},\r\n      });\r\n\r\n      const [buy, setbuy] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n      });\r\n\r\n      const [cash, setcash] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n      });\r\n\r\n      const [target, settarget] = useState({\r\n        showModal: false,\r\n        stockInfo: {},\r\n      });\r\n\r\n        useEffect(()=>{\r\n          let temp = localStorage.getItem('email');\r\n          console.log(temp); \r\n          props.idset(temp);\r\n        },[]);\r\n        \r\n        useEffect(()=>{\r\n          axios.post('/portfolio', encodeURIComponent(props.id))\r\n          .then((res)=>{\r\n                console.log(\"좋아 포트폴리오 데이터 받았어\");\r\n                cartset([...res.data]);\r\n          })\r\n          .catch((err)=>{\r\n              console.log(\"다시 체크해주세요!\");\r\n          })\r\n      },[add],[]);\r\n      \r\n      useEffect(()=>{\r\n        axios.post('/portfolio_target', encodeURIComponent(props.id))\r\n        .then((res)=>{\r\n              console.log(\"좋아 포트폴리오타겟 데이터 받았어\");\r\n              cart2set([...res.data]);\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"다시 체크해주세요!\");\r\n        })\r\n    },[add],[]);\r\n\r\n        return (\r\n            <div>\r\n              <iframe src={URL} width=\"1500px\" height=\"950px\"></iframe>\r\n               <Accordion>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        포트폴리오 관리하기\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                      <Card.Body>\r\n                      <Table striped bordered hover variant=\"dark\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                              <th style = {{width : \"100px\", textAlign : \"center\"}}>수량</th>\r\n                              <th style = {{width : \"150px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>총액</th>\r\n                              <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>수정</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>삭제</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              cart.map(function(a,i){\r\n                                return (\r\n                                  <tr>\r\n                                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{cart[i]?.name}</td>\r\n                                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{cart[i]?.date}</td>\r\n                                    <td style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</td>\r\n                                    <td style = {{width : \"100px\", textAlign : \"center\"}}>{cart[i]?.count}</td>\r\n                                    <td style = {{width : \"100px\", textAlign : \"center\"}}>{cart[i]?.choice} </td>\r\n                                    <td style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.all_price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</td>\r\n                                    <td style = {{width : \"300px\", textAlign : \"center\"}}>{cart[i]?.memo}</td>\r\n\r\n                                    <td> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" \r\n                                    onClick={() => {\r\n                                        setModalState({\r\n                                            stockInfo: cart[i],\r\n                                            showModal: true,\r\n                                        })\r\n                                    }}>\r\n                                      수정</Button></td>\r\n                                      \r\n                                    \r\n                                    <td> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" onClick={()=>{\r\n                                        axios.post('/portfolio_delete',cart[i]?.idx)\r\n                                        .then((res)=>{\r\n                                          console.log(\"포트폴리오 삭제 성공\")\r\n                                          addset(add+1);\r\n                                        })\r\n                                        .catch(()=>{\r\n                                          addset(add+1);\r\n                                          console.log(\"포트폴리오 삭제 실패\")\r\n                                        })\r\n                                    }}>삭제</Button></td>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n                            }\r\n                            \r\n                          </tbody>\r\n                        </Table>\r\n                         {\r\n                           cart.map(function(a,i){\r\n                             return (\r\n                               <div>\r\n                                   <Modify modalState={modalState} setModalState={setModalState} id = {props.id} addset={addset} add={add}></Modify>\r\n                               </div>\r\n                             )\r\n                           })\r\n                         }\r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"flex-end\"}} variant=\"secondary\"\r\n                        onClick={()=>{\r\n                          setcash({\r\n                            stockInfo: \"\",\r\n                            showModal: true,\r\n                        })\r\n                        }}\r\n                        >현금관리</Button> \r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"right\"}} variant=\"secondary\"\r\n                        onClick={()=>{\r\n                          setbuy({\r\n                            stockInfo: \"\",\r\n                            showModal: true,\r\n                        })\r\n                        }}>매수</Button> \r\n\r\n                        <Button style = {{width : \"90px\", textAlign : \"center\", alignContent :\"right\"}} variant=\"secondary\" \r\n                        onClick={()=>{\r\n                          setsell({\r\n                            stockInfo: \"\",\r\n                            showModal: true,\r\n                        })\r\n                        }}\r\n                        >매도</Button>  \r\n                        <Sell sell={sell} setsell={setsell} id={props.id} addset={addset} add={add}></Sell>\r\n                        <Buy buy={buy} setbuy={setbuy} id={props.id} addset={addset} add={add}></Buy>\r\n                        <Cash cash={cash} setcash={setcash} id={props.id} addset={addset} add={add}></Cash>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card> \r\n                </Accordion>\r\n\r\n\r\n\r\n                \r\n                <Accordion>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        목표가/비고 관리하기\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                      <Card.Body>\r\n                      <Table striped bordered hover variant=\"dark\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>목표가</th>\r\n                              <th style = {{width : \"200px\", textAlign : \"center\"}}>비고</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>수정</th>\r\n                              <th style = {{width : \"70px\", textAlign : \"center\"}}>삭제</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              cart2.map(function(a,i){\r\n                                return (\r\n                                  <tr>\r\n                                    <td style = {{width : \"200px\", textAlign : \"center\"}}>{cart2[i]?.name}</td>\r\n                                    {\r\n                                      cart2[i].target!==null\r\n                                    ?<td style = {{width : \"200px\", textAlign : \"center\"}}>{cart2[i]?.target.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} 원</td>\r\n                                    : <td style = {{width : \"200px\", textAlign : \"center\"}}> 목표가 설정해주세요.</td>\r\n                                    }\r\n                                    {\r\n                                      cart2[i].memo_short!==null\r\n                                    ?<td style = {{width : \"200px\", textAlign : \"center\"}}>{cart2[i]?.memo_short}</td>\r\n                                    : <td style = {{width : \"200px\", textAlign : \"center\"}}> -</td>\r\n                                    }\r\n                                    <td> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" \r\n                                    onClick={() => {\r\n                                        setModal2State({\r\n                                            stockInfo: cart2[i],\r\n                                            showModal: true,\r\n                                        })\r\n                                    }}>\r\n                                    수정</Button></td>\r\n                                    \r\n                                    <td> <Button style = {{width : \"70px\", textAlign : \"center\"}} variant=\"secondary\" onClick={()=>{\r\n                                        axios.post('/portfolio_target_delete',{seq : cart2[i]?.seq})\r\n                                        .then((res)=>{\r\n                                          console.log(\"목표가 삭제 성공\")\r\n                                          addset(add+1);\r\n                                        })\r\n                                        .catch(()=>{\r\n                                          addset(add+1);\r\n                                          console.log(\"목표가 삭제 실패\")\r\n                                        })\r\n                                    }}>삭제</Button></td>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n                            }\r\n                            \r\n                          </tbody>\r\n                        </Table>\r\n                         {\r\n                           cart2.map(function(a,i){\r\n                             return (\r\n                               <div>\r\n                                   <Target modalState={modal2State} setModalState={setModal2State} id = {props.id} addset={addset} add={add}></Target>\r\n                               </div>\r\n                             )\r\n                           })\r\n                          }\r\n                       \r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card> \r\n                </Accordion>\r\n                <br/><br/>\r\n                <br/><br/>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\n//수정 버튼\r\nfunction Modify(props) {\r\n  const name=props.modalState.stockInfo.name;\r\n  const [date, setdate] = useState(\"\");\r\n  const [price, setprice] = useState(0);\r\n  const [count, setcount] = useState(0);\r\n  const [memo, setmemo] = useState(\"\");\r\n  const email = props.id;\r\n  const idx = props.modalState.stockInfo.idx;\r\n  const choice = props.modalState.stockInfo.choice;\r\n  return (\r\n    <>\r\n      <Modal show={props.modalState.showModal} size = \"xl\" animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title> 포트폴리오 수정</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>수량</th>\r\n                    <th style = {{width : \"150px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                    <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                  </tr>\r\n               \r\n                </thead>\r\n                <tbody>\r\n                {/* value = {props.modalState.stockInfo.date}  */}\r\n                      <td style = {{width : \"200px\", textAlign : \"center\"}}>{name} </td> \r\n                      <td>\r\n                        <input type=\"date\" className=\"form-control\" onChange={(e) => setdate(e.target.value)}/>\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"price\" className=\"form-control\"onChange={(e) => setprice(e.target.value)}/>\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"number\" className=\"form-control\"onChange={(e) => setcount(e.target.value)}/>\r\n                      </td>\r\n                      <td style = {{width : \"200px\", textAlign : \"center\"}}>{props.modalState.stockInfo.choice} </td>\r\n                      <td>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => setmemo(e.target.value)}/>\r\n                      </td>\r\n                </tbody>  \r\n              </Table>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>{\r\n              props.setModalState({\r\n                stockInfo: \"\",\r\n                showModal : false\r\n            })\r\n            }}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick ={()=>{\r\n              props.setModalState({\r\n              stockInfo: \"\",\r\n               showModal : false,\r\n              });\r\n\r\n              axios.post('/portfolio_modify',{email : {email}, price : {price}, date : {date}, count : {count}, memo : {memo}, name : {name}, choice :{choice}, idx:{idx} } )\r\n              .then((res)=>{\r\n                console.log(\"포트폴리오 수정 성공\");\r\n                props.addset(props.add+1);\r\n              })\r\n              .catch((err)=>{\r\n                console.log(\"포트폴리오 수정 실패\");\r\n                props.addset(props.add+1);\r\n              })\r\n            }}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>  \r\n    </>\r\n  );\r\n}\r\n\r\n//매도 추가 버튼\r\nfunction Sell(props){\r\n    const [name, setname] = useState(\"\");\r\n    const [date, setdate] = useState(\"\");\r\n    const [price, setprice] = useState(0);\r\n    const [count, setcount] = useState(0);\r\n    const [memo, setmemo] = useState(\"\");\r\n    const email = props.id;\r\n    return (\r\n      <>\r\n        <Modal show={props.sell.showModal} size = \"xl\" animation={true}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>종목 매도</Modal.Title>\r\n              </Modal.Header>\r\n                      \r\n              <Modal.Body>\r\n                  <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                        <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>수량</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                        <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                      </tr>\r\n                  \r\n                    </thead>\r\n                    <tbody style ={{ textAlign : \"center\", align : \"center\",  margin :\"0 auto\"}}>\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"삼성전자\" onChange={(e) => setname(e.target.value)}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"date\" className=\"form-control\" onChange={(e) => setdate(e.target.value.toString())}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"price\" className=\"form-control\" placeholder=\"0 원\"  onChange={(e) => setprice(e.target.value)}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"number\" className=\"form-control\" placeholder=\"0 주\"  onChange={(e) => setcount(e.target.value)}/>\r\n                  </td>\r\n\r\n                  <td>\r\n                    매도\r\n                  </td>\r\n\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"메모\"  onChange={(e) => setmemo(e.target.value)}/>\r\n                  </td>\r\n                    </tbody>\r\n                  </Table>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>{\r\n                  props.setsell({\r\n                    stockInfo: \"\",\r\n                    showModal : false\r\n                })\r\n                }}>\r\n                  닫기\r\n                </Button>\r\n                \r\n                <Button variant=\"primary\" onClick ={()=>{\r\n                  props.setsell({\r\n                  stockInfo: \"\",\r\n                  showModal : false,\r\n                  })\r\n                  axios.post('/portfolio_sell',{name : {name}, date : {date}, price : {price}, count : {count}, memo : {memo}, email:{email}})\r\n                  .then((res)=>{\r\n                    props.addset(props.add+1);\r\n                    console.log(\"매도 추가 성공\")\r\n                  })\r\n                  .catch((err)=>{\r\n                    props.addset(props.add+1);\r\n                    console.log(\"매도 추가 실패\")\r\n                  })\r\n                }}>\r\n                  저장하기\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>   \r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n//매수 추가 버튼\r\nfunction Buy(props){\r\n  const [name, setname] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [price, setprice] = useState(0);\r\n  const [count, setcount] = useState(0);\r\n  const [memo, setmemo] = useState(\"\");\r\n  const email = props.id;\r\n  return (\r\n    <>\r\n      <Modal show={props.buy.showModal} size = \"xl\" animation={true}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>종목 매수</Modal.Title>\r\n            </Modal.Header>\r\n                    \r\n            <Modal.Body>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                      <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>수량</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>매수 / 매도</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                    </tr>\r\n                \r\n                  </thead>\r\n                  <tbody style ={{ textAlign : \"center\", align : \"center\",  margin :\"0 auto\"}}>\r\n                <td>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"삼성전자\" onChange={(e) => setname(e.target.value)}/>\r\n                </td>\r\n\r\n                <td>\r\n                  <input type=\"date\" className=\"form-control\" onChange={(e) => setdate(e.target.value.toString())}/>\r\n                </td>\r\n\r\n                <td>\r\n                  <input type=\"price\" className=\"form-control\" placeholder=\"0 원\"  onChange={(e) => setprice(e.target.value)}/>\r\n                </td>\r\n\r\n                <td>\r\n                  <input type=\"number\" className=\"form-control\" placeholder=\"0 주\"  onChange={(e) => setcount(e.target.value)}/>\r\n                </td>\r\n\r\n                <td>\r\n                  매도\r\n                </td>\r\n\r\n                <td>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"메모\"  onChange={(e) => setmemo(e.target.value)}/>\r\n                </td>\r\n                  </tbody>\r\n                </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={()=>{\r\n                props.setbuy({\r\n                  stockInfo: \"\",\r\n                  showModal : false\r\n              })\r\n              }}>\r\n                닫기\r\n              </Button>\r\n              \r\n              <Button variant=\"primary\" onClick ={()=>{\r\n                props.setbuy({\r\n                stockInfo: \"\",\r\n                showModal : false,\r\n                })\r\n                axios.post('/portfolio_buy',{name : {name}, date : {date}, price : {price}, count : {count}, memo : {memo}, email:{email}})\r\n                .then((res)=>{\r\n                  props.addset(props.add+1);\r\n                  console.log(\"매수 추가 성공\")\r\n                })\r\n                .catch((err)=>{\r\n                  props.addset(props.add+1);\r\n                  console.log(\"매수 추가 실패\")\r\n                })\r\n              }}>\r\n                저장하기\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>   \r\n    </>\r\n  )\r\n}\r\n\r\n//현금 추가 버튼\r\nfunction Cash(props){\r\n  const [name, setname] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [price, setprice] = useState(0);\r\n  const [count, setcount] = useState(0);\r\n  const [choice, setchoice] = useState(\"\");\r\n  const [memo, setmemo] = useState(\"\");\r\n  const email = props.id;\r\n  return (\r\n    <>\r\n      <Modal show={props.cash.showModal} size = \"xl\" animation={true}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>현금</Modal.Title>\r\n            </Modal.Header>\r\n                    \r\n            <Modal.Body>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th style = {{width : \"200px\", textAlign : \"center\"}}>날짜</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>금액</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>메모</th>\r\n                      <th style = {{width : \"300px\", textAlign : \"center\"}}>입금/출금</th>\r\n                    </tr>\r\n                \r\n                  </thead>\r\n                  <tbody style ={{ textAlign : \"center\", align : \"center\",  margin :\"0 auto\"}}>\r\n                <td>\r\n                  <input type=\"date\" className=\"form-control\" onChange={(e) => setdate(e.target.value.toString())}/>\r\n                </td>\r\n\r\n                <td>\r\n                  <input type=\"price\" className=\"form-control\" placeholder=\"0 원\"  onChange={(e) => setprice(e.target.value)}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"메모\"  onChange={(e) => setmemo(e.target.value)}/>\r\n                </td>\r\n                <td>\r\n                <Button variant=\"primary\" onClick={()=>{\r\n                props.setcash({\r\n                  stockInfo: \"\",\r\n                  showModal : false\r\n              });\r\n                  axios.post('/portfolio_put',{email:{email}, date:{date}, price:{price} ,memo:{memo} })\r\n                  .then(()=>{ \r\n                    props.addset(props.add+1);\r\n                  })\r\n                  .catch(()=>{\r\n                    props.addset(props.add+1);\r\n                  });\r\n\r\n              }}>\r\n                입금 \r\n              </Button>\r\n\r\n              <Button variant=\"primary\" onClick={()=>{\r\n                props.setcash({\r\n                  stockInfo: \"\",\r\n                  showModal : false\r\n              });\r\n                axios.post('/portfolio_pull',{email:{email}, name:{name}, date:{date}, price:{price},memo:{memo}})\r\n                .then((res)=>{ \r\n                  props.addset(props.add+1);\r\n                })\r\n                .catch((err)=>{  \r\n                  props.addset(props.add+1);\r\n                });\r\n              }}>\r\n                출금\r\n              </Button>\r\n                </td>\r\n                  </tbody>\r\n                </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={()=>{\r\n                props.setcash({\r\n                  stockInfo: \"\",\r\n                  showModal : false\r\n              })\r\n              }}>\r\n                닫기\r\n              </Button>\r\n              \r\n            </Modal.Footer>\r\n          </Modal>   \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n//목표가 비고 관리\r\n//수정 버튼\r\nfunction Target(props) {\r\n  const name=props.modalState.stockInfo.name;\r\n  const [memo, setmemo] = useState(\"\");\r\n  const [target, settarget] = useState();\r\n  const email = props.id;\r\n  return (\r\n    <>\r\n      <Modal show={props.modalState.showModal} size = \"xl\" animation={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title> 목표가/비고 수정</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>종목명</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>목표가</th>\r\n                    <th style = {{width : \"200px\", textAlign : \"center\"}}>비고</th>\r\n                  </tr>\r\n               \r\n                </thead>\r\n                <tbody>\r\n                      <td style = {{width : \"200px\", textAlign : \"center\"}}>{name} </td> \r\n                      <td>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => settarget(e.target.value)}/>\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => setmemo(e.target.value)}/>\r\n                      </td>\r\n                </tbody>  \r\n              </Table>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>{\r\n              props.setModalState({\r\n                stockInfo: \"\",\r\n                showModal : false\r\n            })\r\n            }}>\r\n              닫기\r\n            </Button>\r\n            <Button variant=\"primary\" onClick ={()=>{\r\n              props.setModalState({\r\n              stockInfo: \"\",\r\n               showModal : false,\r\n              });\r\n\r\n              axios.post('/portfolio_target_modify',{ email : {email}, memo : {memo}, name : {name}, target : {target} } )\r\n              .then((res)=>{\r\n                console.log(\"목표가 수정 성공\");\r\n                props.addset(props.add+1);\r\n              })\r\n              .catch((err)=>{\r\n                console.log(\"목표가 수정 실패\");\r\n                props.addset(props.add+1);\r\n              })\r\n            }}>\r\n              저장하기\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>  \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Portfolio;\r\n","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Autocomplete.js",["102"],"import React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport axios from 'axios';\r\n// Imagine you have a list of languages that you'd like to autosuggest.\r\n\r\n\r\nconst languages = [\r\n  {\r\n    name: 'C',\r\n  },\r\n  {\r\n    name: 'Elm',\r\n  },\r\n];\r\n\r\n// Teach Autosuggest how to calculate suggestions for any given input value.\r\nconst getSuggestions = value => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n\r\n  return inputLength === 0 ? [] : languages.filter(lang =>\r\n    lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n  );\r\n};\r\n\r\n// When suggestion is clicked, Autosuggest needs to populate the input\r\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n// input value for every given suggestion.\r\nconst getSuggestionValue = suggestion => suggestion.name;\r\n\r\n// Use your imagination to render suggestions.\r\nconst renderSuggestion = suggestion => (\r\n  <div>\r\n    {suggestion.name}\r\n  </div>\r\n);\r\n\r\nclass Example extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // Autosuggest is a controlled component.\r\n    // This means that you need to provide an input value\r\n    // and an onChange handler that updates this value (see below).\r\n    // Suggestions also need to be provided to the Autosuggest,\r\n    // and they are initially empty because the Autosuggest is closed.\r\n    this.state = {\r\n      value: '',\r\n      suggestions: []\r\n    };\r\n  }\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: 'Type a programming language',\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    // Finally, render it!\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chartmonth.js",["103","104","105"],"import axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as Zoom from 'chartjs-plugin-zoom';\r\n\r\nconst ChartViewer=(props)=>{\r\n   \r\n    const [chartdata, setchartdata] = useState({});\r\n    const news =[];\r\n    const date=[];\r\n    const pct = [];\r\n    useEffect(()=>{\r\n        axios.post('/stock_month', encodeURIComponent(props.search))\r\n        .then((res)=>{\r\n            for(let dataObj of res.data){\r\n                pct.push((dataObj.changepct))\r\n                news.push(parseInt(dataObj.news))\r\n                date.push(parseInt(dataObj.date))   \r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"회사 정보가 없어요. 다시 체크해주세요!\");\r\n        })\r\n      },[props.searchbutton])\r\n    const chart = ()=>{\r\n        setchartdata({\r\n            labels : date,\r\n            datasets :[\r\n                {\r\n                    // yAxesID : \"y-axis-0\",\r\n                    label: '등락률',\r\n                    data: pct,\r\n                    borderColor : \"#FF0000\",\r\n                    fill:false,\r\n                },\r\n                {\r\n                    // yAxesID : \"y-axis-1\",\r\n                    label: '기사량',\r\n                    data: news,\r\n                    borderColor : \"#00D8FF\",\r\n                    fill:false,\r\n                },\r\n               \r\n            ],\r\n        });\r\n    };\r\n\r\n        useEffect(()=>{\r\n            chart();\r\n        },[]);\r\n\r\n\r\n        return (\r\n                  \r\n            <div style={{width : \"80%\",height:\"1000px\", marginLeft : \"auto\", marginRight:\"auto\"}}>\r\n                  <h1>{props.search}</h1>\r\n                <Line \r\n                data={chartdata}\r\n                options={{\r\n                    responsive : true,\r\n                    elements: {\r\n                        point:{\r\n                            radius: 1.5\r\n                        }\r\n                    },\r\n                    title:{\r\n                        // text : \"hhhihihihi\", \r\n                        display :true,\r\n                    },\r\n                    scales : {\r\n                        yAXes : \r\n                        [{\r\n                            // id:\"pct\",\r\n                            // position : \"left\",\r\n                            ticks : {\r\n                                autoSkip :true,\r\n                                maxTicksLimit :10,\r\n                                beginAtZero : true,\r\n                            },\r\n                            gridLines : {\r\n                                display : false,\r\n                            },\r\n                            type :\"monotone\",\r\n                        },{\r\n                            // id:\"news\",\r\n                            // position : \"right\",\r\n                            ticks : {\r\n                                autoSkip :true,\r\n                                maxTicksLimit :10,\r\n                                beginAtZero : true,\r\n                            },\r\n                            gridLines : {\r\n                                display : false,\r\n                            },\r\n                            type :\"monotone\",\r\n                        },\r\n                        ],\r\n\r\n                        xAxes :\r\n                        [{\r\n                            gridLines :{\r\n                                display :false,\r\n                            },\r\n                        }]\r\n                    },\r\n                    pan : {\r\n                        enabled :true,\r\n                        mode : \"x\",\r\n                        speed : 100,\r\n                    },\r\n                    zoom :{\r\n                        enabled:true,\r\n                        drag:false,\r\n                        mode:\"x\",\r\n                        speed : 100,\r\n                    }\r\n                }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ChartViewer;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chartyear.js",["106","107","108"],"import axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as Zoom from 'chartjs-plugin-zoom';\r\n\r\nconst ChartViewer=(props)=>{\r\n   \r\n    const [chartdata, setchartdata] = useState({});\r\n    const news =[];\r\n    const date=[];\r\n    const pct = [];\r\n    useEffect(()=>{\r\n        axios.post('/stock_year', encodeURIComponent(props.search))\r\n        .then((res)=>{\r\n            for(let dataObj of res.data){\r\n                pct.push((dataObj.changepct))\r\n                news.push(parseInt(dataObj.news))\r\n                date.push(parseInt(dataObj.date))   \r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"회사 정보가 없어요. 다시 체크해주세요!\");\r\n        })\r\n      },[props.searchbutton])\r\n    const chart = ()=>{\r\n        setchartdata({\r\n            labels : date,\r\n            datasets :[\r\n                {\r\n                    yAxisID : \"y-axis-1\",\r\n                    label: '등락률',\r\n                    data: pct,\r\n                    borderColor : \"#FF0000\",\r\n                    fill:false,\r\n                },\r\n                {\r\n                    yAxisID : \"y-axis-2\",\r\n                    label: '기사량',\r\n                    data: news,\r\n                    borderColor : \"#00D8FF\",\r\n                    fill:false,\r\n                },\r\n               \r\n            ],\r\n        });\r\n    };\r\n\r\n        useEffect(()=>{\r\n            chart();\r\n        },[]);\r\n\r\n\r\n        return (\r\n                  \r\n            <div style={{width : \"80%\",height:\"1000px\", marginLeft : \"auto\", marginRight:\"auto\"}}>\r\n                  <h1>{props.search}</h1>\r\n                <Line \r\n                data={chartdata}\r\n                options={{\r\n                    responsive : true,\r\n                    elements: {\r\n                        point:{\r\n                            radius: 1.5\r\n                        }\r\n                    },\r\n                    title:{\r\n                        // text : \"hhhihihihi\", \r\n                        display :true,\r\n                    },\r\n                    scales : {\r\n                        yAXes : \r\n                        [{\r\n                            \r\n                            ticks : {\r\n                                autoSkip :true,\r\n                                maxTicksLimit :500,\r\n                                beginAtZero : true,\r\n                            },\r\n                            gridLines : {\r\n                                display : false,\r\n                            },\r\n                            type :\"monotone\",\r\n                            id:\"y-axis-1\",\r\n                            position : \"left\",\r\n                        },{\r\n                            \r\n                            ticks : {\r\n                                autoSkip :true,\r\n                                maxTicksLimit :10,\r\n                                beginAtZero : true,\r\n                            },\r\n                            gridLines : {\r\n                                display : false,\r\n                            },\r\n                            type :\"monotone\",\r\n                            id:\"y-axis-2\",\r\n                            position : \"right\",\r\n                        },\r\n                        ],\r\n\r\n                        xAxes :\r\n                        [{\r\n                            gridLines :{\r\n                                display :false,\r\n                            },\r\n                        }]\r\n                    },\r\n                    pan : {\r\n                        enabled :true,\r\n                        mode : \"x\",\r\n                        speed : 100,\r\n                    },\r\n                    zoom: {\r\n                        enabled: true,\r\n                        mode: 'x',\r\n                        speed: 1,\r\n                        threshold: 0,\r\n                        sensitivity: 0\r\n                        }\r\n                }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ChartViewer;","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart.js",["109","110","111","112","113","114","115"],"import React, { PureComponent,useState,useEffect} from 'react';\r\nimport {\r\n  Label,\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceArea,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n\r\nexport default function Example (props){\r\n\r\n  let  [initialData,setinitialData] = useState([...props.chartdata\r\n  ]);\r\n  \r\n  let [initialState,setinitialState] = useState({\r\n    data: initialData,\r\n    left: 'dataMin',\r\n    right: 'dataMax',\r\n    refAreaLeft: '',\r\n    refAreaRight: '',\r\n    top: 'dataMax+1',\r\n    bottom: 'dataMin-1',\r\n    top2: 'dataMax+20',\r\n    bottom2: 'dataMin-20',\r\n    animation: true,\r\n  });\r\n\r\n  // useEffect(()=>{\r\n  //   setinitialData([...props.chartdata])\r\n  // },[]);\r\n  \r\n\r\n  function getAxisYDomain (from, to, ref, offset) {\r\n    const refData = initialData.slice(from - 1, to);\r\n    let [bottom, top] = [refData[0][ref], refData[0][ref]];\r\n    refData.forEach((d) => {\r\n      if (d[ref] > top) top = d[ref];\r\n      if (d[ref] < bottom) bottom = d[ref];\r\n    });\r\n  \r\n    return [(bottom | 0) - offset, (top | 0) + offset];\r\n  };\r\n\r\n\r\n  function zoom() {\r\n    let refAreaLeft = initialState.refAreaLeft;\r\n    let refAreaRight = initialState.refAreaRight;\r\n    const { data } = {...initialData};\r\n\r\n\r\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\r\n      setinitialState({\r\n        refAreaLeft: '',\r\n        refAreaRight: '',\r\n        data: initialData.data,\r\n        left: initialData.left,\r\n        right: initialData.right,\r\n        bottom :0,\r\n        top:0,\r\n        bottom2:0,\r\n        top:0,\r\n        animation: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // xAxis domain\r\n    if (refAreaLeft > refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\r\n\r\n    // yAxis domain\r\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'changepct', 1);\r\n    const [bottom2, top2] = getAxisYDomain(refAreaLeft, refAreaRight, 'news', 50);\r\n\r\n    setinitialState({\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      data: props.chartdata.slice(),\r\n      left: refAreaLeft,\r\n      right: refAreaRight,\r\n      bottom :bottom,\r\n      top :top,\r\n      bottom2 :bottom2,\r\n      top2 :top2,\r\n      animation: true,\r\n    });\r\n  }\r\n\r\n  function zoomOut() {\r\n    const { data } = {...initialData};\r\n    setinitialState({\r\n      data: props.chartdata.slice(),\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      left: 'dataMin',\r\n      right: 'dataMax',\r\n      top: 'dataMax+1',\r\n      bottom: 'dataMin',\r\n      top2: 'dataMax+50',\r\n      bottom2: 'dataMin+50',\r\n      animation: true,\r\n    });\r\n  }\r\n\r\n    const data = initialState.data;\r\n    const left = initialState.left;\r\n    const right = initialState.right;\r\n    const refAreaLeft = initialState.refAreaLeft;\r\n    const refAreaRight = initialState.refAreaRight;\r\n    const bottom = initialState.bottom;\r\n    const bottom2 = initialState.bottom2;\r\n    const top = initialState.top;\r\n    const top2 = initialState.top2;\r\n\r\n    return (\r\n      <div className=\"highlight-bar-charts\" style={{ userSelect: 'none', width: '100%' }}>\r\n        <button type=\"button\" className=\"btn update\" onClick={zoomOut()}>\r\n          Zoom Out\r\n        </button>\r\n\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n          <LineChart\r\n            width={800}\r\n            height={400}\r\n            data={data}\r\n            // { refAreaLeft: e.activeLabel }\r\n            onMouseDown={(e) => setinitialState(\r\n              {refAreaLeft : initialData.refAreaLeft,\r\n              refAreaRight: e.activeLabel,\r\n              data: initialData.data,\r\n              left: initialData.left,\r\n              right: initialData.right,\r\n              bottom,\r\n              top,\r\n              bottom2,\r\n              top2,\r\n              animation: true,}\r\n            )}\r\n            onMouseMove={(e) => initialState.refAreaLeft &&  setinitialState(\r\n              {refAreaLeft : initialData.refAreaLeft,\r\n              refAreaRight: e.activeLabel,\r\n              data: initialData.data,\r\n              left: initialData.left,\r\n              right: initialData.right,\r\n              bottom,\r\n              top,\r\n              bottom2,\r\n              top2,\r\n              animation: true,}\r\n            )}\r\n            // eslint-disable-next-line react/jsx-no-bind\r\n            onMouseUp={zoom()}>\r\n\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis allowDataOverflow dataKey=\"date\" domain={[left, right]} type=\"number\" />\r\n            <YAxis allowDataOverflow domain={[bottom, top]} type=\"number\" yAxisId=\"1\" />\r\n            <YAxis orientation=\"right\" allowDataOverflow domain={[bottom2, top2]} type=\"number\" yAxisId=\"2\" />\r\n            <Tooltip />\r\n            <Line yAxisId=\"1\" type=\"natural\" dataKey=\"changepct\" stroke=\"#8884d8\" animationDuration={300} />\r\n            <Line yAxisId=\"2\" type=\"natural\" dataKey=\"news\" stroke=\"#82ca9d\" animationDuration={8000} />\r\n\r\n            {refAreaLeft && refAreaRight ? (\r\n              <ReferenceArea yAxisId=\"1\" x1={refAreaLeft} x2={refAreaRight} strokeOpacity={0.3} />\r\n            ) : null}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\장호영\\Desktop\\Juice\\stock\\stock\\src\\components\\Chart2.js",["116","117","118","119"],"import React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport axios from 'axios';\r\nimport {Button, Form,FormControl} from 'react-bootstrap';\r\n\r\n// Imagine you have a list of languages that you'd like to autosuggest.\r\nconst languages = [\r\n  {\r\n    name: '삼성전자',\r\n  },\r\n  {\r\n    name: '삼성전기',\r\n  },\r\n  {\r\n    name: '삼성전자우',\r\n  },\r\n  {\r\n    name: '코나아이',\r\n  },\r\n  {\r\n    name: 'CSA 코스믹',\r\n  },\r\n];\r\n\r\n// Teach Autosuggest how to calculate suggestions for any given input value.\r\nconst getSuggestions = value => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n\r\n  return inputLength === 0 ? [] : languages.filter(lang =>\r\n    lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n  );\r\n};\r\n\r\n// When suggestion is clicked, Autosuggest needs to populate the input\r\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n// input value for every given suggestion.\r\nconst getSuggestionValue = suggestion => suggestion.name;\r\n\r\n// Use your imagination to render suggestions.\r\nconst renderSuggestion = suggestion => (\r\n  <div>\r\n    {suggestion.name}\r\n  </div>\r\n);\r\n\r\nclass Example extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // Autosuggest is a controlled component.\r\n    // This means that you need to provide an input value\r\n    // and an onChange handler that updates this value (see below).\r\n    // Suggestions also need to be provided to the Autosuggest,\r\n    // and they are initially empty because the Autosuggest is closed.\r\n    this.state = {\r\n      value: '',\r\n      suggestions: []\r\n    };\r\n  }\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: '  종목명 검색해보세요',\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    // Finally, render it!\r\n    return (\r\n     <div>\r\n        <Autosuggest \r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n        />\r\n      {/* <Button variant=\"outline-success\">검색</Button> */}\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;",{"ruleId":"120","severity":1,"message":"121","line":6,"column":23,"nodeType":"122","messageId":"123","endLine":6,"endColumn":33},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":19,"column":9,"nodeType":"130","endLine":19,"endColumn":11,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":1,"nodeType":"134","endLine":106,"endColumn":2},{"ruleId":"120","severity":1,"message":"135","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":25},{"ruleId":"120","severity":1,"message":"136","line":4,"column":46,"nodeType":"122","messageId":"123","endLine":4,"endColumn":50},{"ruleId":"120","severity":1,"message":"137","line":4,"column":51,"nodeType":"122","messageId":"123","endLine":4,"endColumn":60},{"ruleId":"128","severity":1,"message":"129","line":14,"column":5,"nodeType":"130","endLine":14,"endColumn":7,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":20,"column":26,"nodeType":"141","messageId":"142","endLine":20,"endColumn":34},{"ruleId":"128","severity":1,"message":"143","line":28,"column":7,"nodeType":"130","endLine":28,"endColumn":12,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":32,"column":13,"nodeType":"147","endLine":32,"endColumn":59},{"ruleId":"148","severity":1,"message":"149","line":34,"column":13,"nodeType":"147","endLine":34,"endColumn":101},{"ruleId":"128","severity":1,"message":"129","line":24,"column":5,"nodeType":"130","endLine":24,"endColumn":7,"suggestions":"150"},{"ruleId":"120","severity":1,"message":"151","line":4,"column":9,"nodeType":"122","messageId":"123","endLine":4,"endColumn":13},{"ruleId":"120","severity":1,"message":"152","line":4,"column":14,"nodeType":"122","messageId":"123","endLine":4,"endColumn":25},{"ruleId":"120","severity":1,"message":"153","line":7,"column":12,"nodeType":"122","messageId":"123","endLine":7,"endColumn":18},{"ruleId":"120","severity":1,"message":"154","line":36,"column":14,"nodeType":"122","messageId":"123","endLine":36,"endColumn":20},{"ruleId":"120","severity":1,"message":"155","line":36,"column":22,"nodeType":"122","messageId":"123","endLine":36,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":45,"column":11,"nodeType":"130","endLine":45,"endColumn":13,"suggestions":"156"},{"ruleId":"128","severity":1,"message":"143","line":56,"column":9,"nodeType":"130","endLine":56,"endColumn":14,"suggestions":"157"},{"ruleId":"128","severity":1,"message":"143","line":67,"column":7,"nodeType":"130","endLine":67,"endColumn":12,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"146","line":71,"column":15,"nodeType":"147","endLine":71,"endColumn":63},{"ruleId":"120","severity":1,"message":"159","line":524,"column":16,"nodeType":"122","messageId":"123","endLine":524,"endColumn":23},{"ruleId":"120","severity":1,"message":"160","line":527,"column":10,"nodeType":"122","messageId":"123","endLine":527,"endColumn":15},{"ruleId":"120","severity":1,"message":"161","line":527,"column":17,"nodeType":"122","messageId":"123","endLine":527,"endColumn":25},{"ruleId":"120","severity":1,"message":"162","line":528,"column":10,"nodeType":"122","messageId":"123","endLine":528,"endColumn":16},{"ruleId":"120","severity":1,"message":"163","line":528,"column":18,"nodeType":"122","messageId":"123","endLine":528,"endColumn":27},{"ruleId":"120","severity":1,"message":"164","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":13},{"ruleId":"120","severity":1,"message":"165","line":4,"column":13,"nodeType":"122","messageId":"123","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"166","line":24,"column":9,"nodeType":"130","endLine":24,"endColumn":29,"suggestions":"167"},{"ruleId":"128","severity":1,"message":"168","line":50,"column":11,"nodeType":"130","endLine":50,"endColumn":13,"suggestions":"169"},{"ruleId":"120","severity":1,"message":"165","line":4,"column":13,"nodeType":"122","messageId":"123","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"166","line":24,"column":9,"nodeType":"130","endLine":24,"endColumn":29,"suggestions":"170"},{"ruleId":"128","severity":1,"message":"168","line":50,"column":11,"nodeType":"130","endLine":50,"endColumn":13,"suggestions":"171"},{"ruleId":"120","severity":1,"message":"172","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":30},{"ruleId":"120","severity":1,"message":"173","line":1,"column":40,"nodeType":"122","messageId":"123","endLine":1,"endColumn":49},{"ruleId":"120","severity":1,"message":"174","line":3,"column":3,"nodeType":"122","messageId":"123","endLine":3,"endColumn":8},{"ruleId":"120","severity":1,"message":"175","line":17,"column":21,"nodeType":"122","messageId":"123","endLine":17,"endColumn":35},{"ruleId":"120","severity":1,"message":"176","line":53,"column":13,"nodeType":"122","messageId":"123","endLine":53,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":66,"column":9,"nodeType":"179","messageId":"180","endLine":66,"endColumn":12},{"ruleId":"120","severity":1,"message":"176","line":94,"column":13,"nodeType":"122","messageId":"123","endLine":94,"endColumn":17},{"ruleId":"120","severity":1,"message":"164","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":13},{"ruleId":"120","severity":1,"message":"181","line":4,"column":9,"nodeType":"122","messageId":"123","endLine":4,"endColumn":15},{"ruleId":"120","severity":1,"message":"151","line":4,"column":17,"nodeType":"122","messageId":"123","endLine":4,"endColumn":21},{"ruleId":"120","severity":1,"message":"152","line":4,"column":22,"nodeType":"122","messageId":"123","endLine":4,"endColumn":33},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["184"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'RESERVED_EVENTS' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.",["185"],"array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["186"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Add_Button must be in PascalCase or SCREAMING_SNAKE_CASE",["187"],"'Form' is defined but never used.","'FormControl' is defined but never used.","'URLset' is assigned a value but never used.","'target' is assigned a value but never used.","'settarget' is assigned a value but never used.",["188"],["189"],["190"],"'setname' is assigned a value but never used.","'count' is assigned a value but never used.","'setcount' is assigned a value but never used.","'choice' is assigned a value but never used.","'setchoice' is assigned a value but never used.","'axios' is defined but never used.","'Zoom' is defined but never used.","React Hook useEffect has missing dependencies: 'date', 'news', 'pct', and 'props.search'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.",["192"],["193"],["194"],"'PureComponent' is defined but never used.","'useEffect' is defined but never used.","'Label' is defined but never used.","'setinitialData' is assigned a value but never used.","'data' is assigned a value but never used.","no-dupe-keys","Duplicate key 'top'.","ObjectExpression","unexpected","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"198","fix":"199"},{"desc":"195","fix":"200"},{"desc":"195","fix":"201"},{"desc":"198","fix":"202"},{"desc":"198","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"204","fix":"208"},{"desc":"206","fix":"209"},"Update the dependencies array to be: [props]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [add, props.id]",{"range":"213","text":"214"},{"range":"215","text":"211"},{"range":"216","text":"211"},{"range":"217","text":"214"},{"range":"218","text":"214"},"Update the dependencies array to be: [date, news, pct, props.search, props.searchbutton]",{"range":"219","text":"220"},"Update the dependencies array to be: [chart]",{"range":"221","text":"222"},{"range":"223","text":"220"},{"range":"224","text":"222"},[640,642],"[props]",[629,631],[1038,1043],"[add, props.id]",[712,714],[1310,1312],[1639,1644],[1962,1967],[748,768],"[date, news, pct, props.search, props.searchbutton]",[1449,1451],"[chart]",[747,767],[1442,1444]]